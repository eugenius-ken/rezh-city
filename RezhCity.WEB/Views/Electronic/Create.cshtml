@model RezhCity.WEB.Models.CreateElectronicView
@using RezhCity.DAL.Enums;
@{
    ViewBag.Title = "Подать объявление - Бытовая электроника. Сайт объявлений города Реж";
    ViewBag.Description = "Разместить объявление на сайте Реж-сити. Бытовая электроника.";
    ViewBag.Keywords = "подать объявление город реж, разместить объявление в городе реже, реж объявления, город реж подача объявления";
}
@section FileInput{
    @Styles.Render("~/Content/fileinput")
}

<div class="col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2 col-sm-8 col-sm-offset-2 col-xs-12 margin-top-30">
    @using (Html.BeginForm("Create", "Electronic", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", id = "formAdd" }))
    {
        @Html.AntiForgeryToken()
        <div class="page-header">
            <h3>Представьтесь, пожалуйста</h3>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OwnerName, new { @class = "col-md-4 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.OwnerName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OwnerName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, new { @class = "col-md-4 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VkId, new { @class = "col-md-4 control-label" })
            <div class="col-md-7">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon">vk.com/</span>
                    <input type="text" class="form-control" id="VkId" name="VkId" aria-describedby="basic-addon" />
                </div>
                @Html.ValidationMessageFor(m => m.VkId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OkId, new { @class = "col-md-4 control-label" })
            <div class="col-md-7">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon">ok.ru/profile/</span>
                    <input type="text" class="form-control" id="OkId" name="OkId" aria-describedby="basic-addon" />
                </div>
                @Html.ValidationMessageFor(m => m.OkId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Type, new { @class = "col-md-4 control-label" })
            <div class="col-md-7">
                @Html.EnumDropDownListFor(m => m.Type, new { @class = "form-control" })
            </div>
        </div>

        <div class="page-header" id="mainInfoHeader">
            <h3>Основная информация</h3>
        </div>
        <div id="mainInfo">
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                <div class="col-md-7">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "5" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Price, new { @class = "col-md-4 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control ", type = "number" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label" for="images_1">Фото</label>
                <div class="col-md-7">
                    <input type="file" multiple name="images" id="images_1" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-7 col-md-offset-4">
                    <div class="pull-right">
                        <button type="submit" class="btn btn-primary" id="submitButton">Разместить</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {

    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/validation-messages-russian.js"></script>
    <script src="~/Scripts/plugins/canvas-to-blob.min.js"></script>
    @Scripts.Render("~/bundles/fileinput")
    <script>
        var imagesInputCount = 1;
        $(document).ready(function () {
            $('#Phone').inputmask("+79999999999");
            $('#EngineCapacity').inputmask("9.9");

            $('#images_1').fileinput({
                language: 'ru',
                maxFileCount: 10,
                allowedFileTypes: ['image'],
                allowedFileExtensions: ['jpg', 'jpeg', 'gif', 'png'],
                showUpload: false,
                maxFileSize: 10000,
                previewZoomSettings: {
                    image: { width: "auto", height: "100%", }
                }
            });

            changeAdvName();

            //if mobile
            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                $('input[name="images"]').on('fileselect', createFileInput);
            }
        });

        $('#Type').change(function () {
            changeAdvName();
        });

        $('#formAdd').submit(function () {
            if ($(this).valid()) {
                var $btn = $('#submitButton');
                $btn.prop('disabled', true);
                $btn.html('<span class="glyphicon glyphicon-refresh"></span>');
            }
        });

        $('input').keypress(function (e) {
            if (e.which == 13) {
                e.preventDefault();
            }
        }); 

        function changeAdvName() {
            var result = '';
            var $advName = $('#Name');
            $advName.empty();
            var type = $('#Type').find("option:selected").text();
            if (type == 'Продать') {
                result += 'Продам';
            }
            else if (type == 'Купить') {
                result += 'Куплю';
            }
            else if (type == 'Обменять') {
                result += 'Обменяю';
            }
            else if (type == 'Отдать даром') {
                result += 'Отдам даром';
            }

            $advName.val(result);
        }

        function createFileInput(e) {
            //if not exist next input
            if (!$('#images_' + (imagesInputCount + 1)).length && imagesInputCount < 10) {
                imagesInputCount++;
                //insert input element
                $(e.currentTarget).parents('.form-group').after(
                    `<div class="form-group">
                            <label class="col-md-4 control-label" for="images_` + imagesInputCount + `">Фото</label >
                            <div class="col-md-7">
                                <input type="file" multiple name="images" id="images_` + imagesInputCount + `" />
                            </div>
                         </div >`
                );
                //initialize fileinput
                $('#images_' + imagesInputCount).fileinput({
                    language: 'ru',
                    maxFileCount: 1,
                    allowedFileTypes: ['image'],
                    allowedFileExtensions: ['jpg', 'jpeg', 'gif', 'png'],
                    showUpload: false,
                    maxFileSize: 10000,
                    previewZoomSettings: {
                        image: { width: "auto", height: "100%", }
                    }
                });

                $('#images_' + imagesInputCount).on('fileselect', createFileInput);
            }
        }

    </script>

}




